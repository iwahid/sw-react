{"version":3,"sources":["pages/LoginPage/LoginPage.module.css","components/MainContent/FilmMainContent/FilmMainContent.module.scss","pages/contentPages/commonStyles.module.scss","components/NavigationBar/NavigationBar.module.scss","components/MainContent/RelatedTabs/RelatedDataPanel/RelatedDatapanel.module.scss","components/TabsSection/commonStyles.module.css","components/AsideList/AsideList.module.scss","components/UIComponents/Button/Button.module.scss","pages/NotFoundPage/NotFoundPage.module.css","App.module.css","components/MainContent/PlanetMainContent/PlanetMainContent.module.scss","store/reducers/currentFilmReducer.ts","store/reducers/filmsReducer.ts","store/reducers/charactersReducer.ts","store/reducers/planetsReducer.ts","store/reducers/userReducer.ts","store/store.ts","api/firebaseService.ts","api/services/userService/userService.ts","components/UIComponents/Button/Button.tsx","components/NavigationBar/NavigationBar.tsx","api/mappers/characterMapper.ts","api/mappers/planetMapper.ts","api/mappers/specieMapper.ts","api/mappers/starshipMapper.ts","api/mappers/vehicleMapper.ts","api/services/FilmsService/filmsService.ts","components/AsideList/AsideList.tsx","components/TabsSection/Tabs.js","assets/imagePlaceHolder/SW-ImageNotFound_transparent.png","components/MainContent/RelatedTabs/RelatedDataPanel/RelatedDataPanel.tsx","components/TabsSection/Panel.js","components/MainContent/FilmMainContent/dataListService.ts","components/MainContent/FilmMainContent/FilmMainContent.tsx","pages/contentPages/FilmsPage/FilmsPage.tsx","api/mappers/filmMapper.ts","assets/imagePlaceHolder/Yoda-ImageNotFound.png","components/MainContent/CharacterMainContent/CharacterMainContent.tsx","api/services/charactersService/charactersService.ts","pages/contentPages/CharactersPage/CharactersPage.tsx","api/services/planetsService/planetsService.ts","components/MainContent/PlanetMainContent/PlanetMainContent.tsx","pages/contentPages/PlanetsPage/PlanetsPage.tsx","assets/imagePlaceHolder/Stormtrooper1.png","assets/imagePlaceHolder/Stormtrooper2.png","pages/LoginPage/LoginPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/PrivateRoute/PrivateRoute.tsx","App.tsx","index.tsx","components/MainContent/CharacterMainContent/CharacterMainContent.module.scss"],"names":["module","exports","initialState","characters","created","director","edited","episodeId","openingCrawl","planets","producer","releaseDate","species","starships","title","vehicles","imageBackground","imagePoster","docId","email","password","store","configureStore","reducer","state","action","type","payload","films","user","currentFilm","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dispatch","Button","props","className","styles","button","size","onClick","children","NavigationBar","currentUserEmail","useSelector","history","useHistory","navigation","navigation__container","navigation__section","navigation__logo","to","navigation__linkGroup","activeClassName","navigation__link_selected","navigation__link","auth","signOut","then","responseUserCredential","console","log","push","mapCharacterDtoToCharacterModel","character","birthYear","birth_year","eyeColor","eye_color","gender","hairColor","hair_color","height","homeworld","image","mass","name","skinColor","skin_color","mapPlanetDtoToPlanetModel","planetDto","climate","diameter","gravity","orbitalPeriod","orbital_period","population","rotationPeriod","rotation_period","surfaceWater","surface_water","terrain","mapSpecieDtoToSpecieModel","specieDto","averageHeight","average_height","averageLifespan","average_lifespan","classification","designation","eyeColors","eye_colors","hairColors","hair_colors","language","people","skinColors","skin_colors","mapStarshipDtoToStarshipMode","starshipDto","starshipSpeed","MGLT","hyperdriveRating","hyperdrive_rating","pilots","starshipClass","starship_class","mapVehicleDtoToVehicleModel","vehicleDto","vehicleClass","vehicle_class","loadExtraDataToCurrentFilm","idList","link","mapperFunc","actionCreate","result","chanksArray","fullListArray","chunksArray","i","Math","ceil","length","slice","array–°hunking","firestore","collection","where","get","querySnapshot","forEach","doc","mapped","data","fields","pk","actionCharacters","actionPlanets","actionSpecies","actionStarships","actionVehicles","AsideList","linksList","currentRoute","navList","nav","map","selected","linkItem","id","wrapper","container","Tabs","index","this","setState","tabsContainer","elem","style","tabItem","tabButton","handleChange","panel","Component","RelatedDataPanel","urlPath","contentList","contentItem","item","itemPicture","backgroundImage","imageBGPlaceHolder","backgroundSize","backgroundRepeat","backgroundPosition","overflow","itemContainer","itemContent","itemTitle","titleValue","subTitle","itemSubTitle","subTitleValue","Panel","getPlanetsList","planet","getCharactersList","getSpeciesList","specie","getStarshipsList","starship","getVehiclesList","vehicle","FilmMainContent","useParams","film","find","findFilm","Number","useEffect","updateCurrentFilm","backgroundImageStyles","loadingMessage","mainData","content","poster","alt","src","filmInformation","filmTitle","informationList","informationListItem","informationListTitle","informationListContent","relativeContent","dataListService","FilmsPage","isNarrow","useMedia","maxWidth","onSnapshot","filmDto","episode_id","opening_crawl","release_date","image_background","image_poster","aside","mainContent","CharacterMainContent","urlParams","findCharacter","characterPicture","characterPicture__wrapper","characterPicture__image","imageNotFound","characterInfo","characterInfo__header","characterInfo__row","characterInfo__name","characterInfo__gender","characterInfo__birth","characterInfo__body","characterInfo__column","characterInfo__value","characterInfo__subTitle","CharactersPage","PlanetMainContent","findPlanet","planetInfo","planetName","planetInfoItem","value","planetInfo__item","description","PlanetsPage","LoginPage","useState","positionX","setPositionX","timer1","setInterval","timer2","setTimeout","clearTimeout","message","registrationStatus","changeRegistrationStatus","userCredentials","setUserCredentials","formSubmitted","setFormSubmitted","handleSignInForm","event","preventDefault","Promise","resolve","reject","signInWithEmailAndPassword","catch","error","userLogin","stormtrooperLeft","stormtrooper1","formContainer","titleSection","titleContainer","transform","form","onSubmit","formElement","htmlFor","onChange","e","prevState","target","placeholder","errorMessage","formGroup","createUserWithEmailAndPassword","userRegister","registrationStatusSuccess","registrationStatusError","stormtrooperRight","stormtrooper2","NotFoundPage","PrivateRoute","rest","authUser","render","App","app","appNavbar","from","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a58efc8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginPage_wrapper__30sNV\",\"container\":\"LoginPage_container__3xC84\",\"formContainer\":\"LoginPage_formContainer__28gyn\",\"form\":\"LoginPage_form__2xTj8\",\"titleSection\":\"LoginPage_titleSection__27axp\",\"titleContainer\":\"LoginPage_titleContainer__1atE-\",\"title\":\"LoginPage_title__3GyQB\",\"subTitle\":\"LoginPage_subTitle__1lUNC\",\"formElement\":\"LoginPage_formElement__2sElP\",\"errorMessage\":\"LoginPage_errorMessage__174VE\",\"formGroup\":\"LoginPage_formGroup__3QCkE\",\"image\":\"LoginPage_image__3R44z\",\"stormtrooperLeft\":\"LoginPage_stormtrooperLeft__2hj1_\",\"stormtrooperRight\":\"LoginPage_stormtrooperRight__2owaQ\",\"registrationStatusSuccess\":\"LoginPage_registrationStatusSuccess__1oV9v\",\"registrationStatusError\":\"LoginPage_registrationStatusError__3pBiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilmMainContent_wrapper__9IBC5\",\"container\":\"FilmMainContent_container__1KIZz\",\"mainData\":\"FilmMainContent_mainData__lgrPf\",\"content\":\"FilmMainContent_content__tnAtY\",\"poster\":\"FilmMainContent_poster__3OQNA\",\"filmInformation\":\"FilmMainContent_filmInformation__2Yrfe\",\"filmTitle\":\"FilmMainContent_filmTitle__3Vof8\",\"informationList\":\"FilmMainContent_informationList__17g7L\",\"informationListItem\":\"FilmMainContent_informationListItem__3WdiK\",\"relativeContent\":\"FilmMainContent_relativeContent__1kZvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"commonStyles_wrapper__3QOWW\",\"container\":\"commonStyles_container__Tvh1_\",\"aside\":\"commonStyles_aside__WB8F6\",\"mainContent\":\"commonStyles_mainContent__20bbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"NavigationBar_navigation__2yYQH\",\"navigation__container\":\"NavigationBar_navigation__container__1pXr-\",\"navigation__section\":\"NavigationBar_navigation__section__2GZ2I\",\"navigation__linkGroup\":\"NavigationBar_navigation__linkGroup__1kQAb\",\"navigation__link\":\"NavigationBar_navigation__link__3Pg9K\",\"navigation__link_selected\":\"NavigationBar_navigation__link_selected__3dV-5\",\"navigation__logo\":\"NavigationBar_navigation__logo__1Puxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RelatedDatapanel_wrapper__XzqH2\",\"item\":\"RelatedDatapanel_item__2SgnR\",\"itemContainer\":\"RelatedDatapanel_itemContainer__3jtL7\",\"itemPicture\":\"RelatedDatapanel_itemPicture__2RL59\",\"itemContent\":\"RelatedDatapanel_itemContent__1SxE4\",\"itemTitle\":\"RelatedDatapanel_itemTitle__vcdcP\",\"titleValue\":\"RelatedDatapanel_titleValue__27z8s\",\"itemSubTitle\":\"RelatedDatapanel_itemSubTitle__1AVuC\",\"subTitle\":\"RelatedDatapanel_subTitle__1Mu5H\",\"subTitleValue\":\"RelatedDatapanel_subTitleValue__2-kkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"commonStyles_panel__2i7HA\",\"tabsContainer\":\"commonStyles_tabsContainer__9iLjg\",\"tabItem\":\"commonStyles_tabItem__3N2F5\",\"selected\":\"commonStyles_selected__3oZgp\",\"tabButton\":\"commonStyles_tabButton__3u8bj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AsideList_wrapper__3hpQ7\",\"container\":\"AsideList_container__1VLMU\",\"nav\":\"AsideList_nav__2CGmR\",\"linkItem\":\"AsideList_linkItem__239B4\",\"selected\":\"AsideList_selected__aY90H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__jHM-E\",\"button_small\":\"Button_button_small__3KgLb\",\"button_medium\":\"Button_button_medium__1lWq-\",\"button_large\":\"Button_button_large__KbqPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFoundPage_wrapper__755qN\",\"backgroundImage\":\"NotFoundPage_backgroundImage__1sQRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2gdZR\",\"appNavbar\":\"App_appNavbar__lQQRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PlanetMainContent_wrapper__1nWxG\",\"container\":\"PlanetMainContent_container__5Po5H\",\"content\":\"PlanetMainContent_content__2XFMQ\",\"planetInfo\":\"PlanetMainContent_planetInfo__22tKT\",\"planetName\":\"PlanetMainContent_planetName__1IBzU\",\"value\":\"PlanetMainContent_value__2ne_8\",\"planetInfo__item\":\"PlanetMainContent_planetInfo__item__2LJbG\",\"description\":\"PlanetMainContent_description__1HsbV\"};","import { ExtendedFilmModel } from \"../../models/extendedFilmModel\";\r\n\r\nconst initialState: ExtendedFilmModel = {\r\n  characters: [],\r\n  created: '',\r\n  director: '',\r\n  edited: '',\r\n  episodeId: 0,\r\n  openingCrawl: '',\r\n  planets: [],\r\n  producer: '',\r\n  releaseDate: '',\r\n  species: [],\r\n  starships: [],\r\n  title: '',\r\n  vehicles: [],\r\n  imageBackground: '',\r\n  imagePoster: '',\r\n  docId: 0,\r\n}\r\n\r\nexport const currentFilmReducer = (state = initialState, action: any): typeof initialState => {\r\n  switch (action.type) {\r\n    case 'currentFilm/setCurrentFilm': {\r\n      return {...action.payload} \r\n    }\r\n    case 'currentFilm/loadCharactersToCurrentFilm': {\r\n      return {...state, characters: [...action.payload]}\r\n    }\r\n    case 'currentFilm/loadPlanetsToCurrentFilm': {\r\n      return {...state, planets: [...action.payload]}\r\n    }\r\n    case 'currentFilm/loadSpeciesToCurrentFilm': {\r\n      return {...state, species: [...action.payload]}\r\n    }\r\n    case 'currentFilm/loadStarshipsToCurrentFilm': {\r\n      return {...state, starships: [...action.payload]}\r\n    }\r\n    case 'currentFilm/loadVehiclesToCurrentFilm': {\r\n      return {...state, vehicles: [...action.payload]}\r\n    }\r\n    case 'currentFilm/loadTransportToCurrentFilm': {\r\n      return {...state, species: [...action.payload]}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { FilmModel } from '../../models';\r\n\r\nconst initialState: FilmModel[] = []\r\n\r\nexport const filmsReducer = (state = initialState, action: any): typeof initialState => {\r\n  switch (action.type) {\r\n    case 'films/loadAllFilms': {\r\n      return action.payload\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { CharacterModel } from '../../models';\r\n\r\nconst initialState: CharacterModel[] = []\r\n\r\nexport const charactersReducer = (state = initialState, action: any): typeof initialState => {\r\n  switch (action.type) {\r\n    case 'characters/loadAllCharacters': {\r\n      return action.payload\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { PlanetModel } from '../../models';\r\n\r\nconst initialState: PlanetModel[] = []\r\n\r\nexport const planetsReducer = (state = initialState, action: any): typeof initialState => {\r\n  switch (action.type) {\r\n    case 'planets/loadAllPlanets': {\r\n      return action.payload\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { UserModel } from '../../models';\r\n\r\nconst initialState: UserModel = {\r\n  email: '',\r\n  password: ''\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: any): typeof initialState => {\r\n  switch (action.type) {\r\n    /* TODO: Add registration */\r\n    case 'user/registered': {\r\n      return action.payload\r\n    }\r\n    case 'user/auth': {\r\n      return action.payload\r\n    }\r\n    case 'user/logout': {\r\n      return action.payload\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport {\r\n  userReducer,\r\n  filmsReducer,\r\n  charactersReducer,\r\n  planetsReducer,\r\n  currentFilmReducer,\r\n} from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    characters: charactersReducer,\r\n    planets: planetsReducer,\r\n    films: filmsReducer,\r\n    user: userReducer,\r\n    currentFilm: currentFilmReducer\r\n  }\r\n})\r\n\r\n// Infer the `RootState` type from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>","import firebase from \"firebase\";\r\n\r\n/** Config for connecting and initializing the database */\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBej9vAIUgq_zn3LfZMByY-_Q-sffq53JQ\",\r\n  authDomain: \"sw-angular-ac347.firebaseapp.com\",\r\n  databaseURL: \"https://sw-angular-ac347-default-rtdb.firebaseio.com\",\r\n  projectId: \"sw-angular-ac347\",\r\n  storageBucket: \"sw-angular-ac347.appspot.com\",\r\n  messagingSenderId: \"876984666061\",\r\n  appId: \"1:876984666061:web:2f0d560ad8b272d71ae684\"\r\n};\r\n\r\nexport const db = firebase.initializeApp(firebaseConfig);","import { db } from \"../../firebaseService\";\r\nimport { store } from '../../../store/store';\r\nimport { UserModel } from '../../../models';\r\n\r\nconst { dispatch } = store\r\n\r\nexport interface FirebaseAuthResponse {\r\n  type: string,\r\n  message: string\r\n}\r\n\r\n/**\r\n * Registers a user using firebase services\r\n * \r\n * @param userCredentials User data (email, password)\r\n * @returns Promise containing an registration status\r\n */\r\nexport const userRegister = (userCredentials: UserModel): Promise<FirebaseAuthResponse> =>\r\n  new Promise<FirebaseAuthResponse>((resolve, reject) => {\r\n    db.auth()\r\n      .createUserWithEmailAndPassword(userCredentials.email, userCredentials.password)\r\n      .then((responseUserCredential) => {\r\n        const { user } = responseUserCredential;\r\n        resolve({\r\n          type: 'SUCCESS',\r\n          message: `User ${user?.email} has been registered!`,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line prefer-promise-reject-errors\r\n        reject({\r\n          type: 'ERROR',\r\n          message: `User has not been registered! ${error.message}`,\r\n        })\r\n      })\r\n  })\r\n\r\n/**\r\n * Authorizes user using firebase services\r\n * \r\n * @param userCredentials User data (email, password)\r\n * @returns Promise containing an authorization status\r\n */\r\nexport const userLogin = (userCredentials: UserModel): Promise<FirebaseAuthResponse> =>\r\n  new Promise<FirebaseAuthResponse>((resolve, reject) => {\r\n    db.auth()\r\n      .signInWithEmailAndPassword(userCredentials.email, userCredentials.password)\r\n      .then((responseUserCredential) => {\r\n\r\n        /* I do not use the .then method to deliver a message to the user about successful authorization, \r\n        because in case of successful authorization, he will be notified explicitly by redirecting to another page */\r\n        const { user } = responseUserCredential;\r\n        dispatch({ type: 'user/auth', payload: { email: user?.email } })\r\n      })\r\n      .catch(error => {\r\n        // eslint-disable-next-line prefer-promise-reject-errors\r\n        reject({\r\n          type: 'ERROR',\r\n          message: `Authorization failed! ${error.message}`,\r\n        })\r\n      })\r\n  })\r\n\r\n/** Log out user using firebase services */\r\nexport const userLogout = (): void => {\r\n  db.auth().signOut()\r\n    .then((responseUserCredential) => {\r\n      dispatch({ type: 'user/logout', payload: { email: '' } })\r\n      console.log(\"USER LOGOUT\")\r\n    })\r\n}","import React from 'react'\r\nimport styles from './Button.module.scss'\r\n\r\ninterface BtnSizeInterface {\r\n  small: 'small',\r\n  medium: 'medium',\r\n  large: 'large'\r\n}\r\n\r\nexport const BTN_SIZE: BtnSizeInterface = {\r\n  small: 'small',\r\n  medium: 'medium',\r\n  large: 'large'\r\n}\r\n\r\nexport interface ButtonProps {\r\n  title: string,\r\n  size?: \"small\" | 'medium' | 'large',\r\n  type?: 'button' | 'submit' | 'reset',\r\n  onClick?: (event: React.FormEvent<HTMLButtonElement>) => void,\r\n}\r\n\r\n\r\nexport const Button: React.FC<ButtonProps> = (props) => (\r\n  <button\r\n    className={`\r\n      ${styles.button} \r\n      ${props.size && styles[`button_${props.size}`]}\r\n      `}\r\n    onClick={props.onClick}\r\n    type={props.type && 'button'}\r\n  >{props.title || props.children}</button>\r\n)","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { userLogout } from '../../api/services/userService/userService';\r\nimport { RootState } from '../../store/store';\r\nimport { Button } from '../UIComponents/Button/Button';\r\nimport styles from './NavigationBar.module.scss'\r\nimport LOGO_FULL from \"../../assets/imagePlaceHolder/SW-logo_full.png\"\r\nimport LOGO_SHORT from \"../../assets/imagePlaceHolder/SW-logo_short.png\"\r\n\r\n/** The main way to navigate the app */\r\nexport const NavigationBar: React.FC = () => {\r\n\r\n  const currentUserEmail = useSelector((state: RootState) => state.user.email)\r\n  const history = useHistory()\r\n\r\n  /** Login / logout function */\r\n  const handleClick = () => {\r\n    if (currentUserEmail !== '') {\r\n      userLogout()\r\n      history.push('/sw-react/')\r\n    } else {\r\n      history.push('/sw-react/login')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className={styles.navigation}>\r\n      <div className={styles.navigation__container}>\r\n\r\n        <div className={styles.navigation__section}>\r\n          <NavLink className={styles.navigation__logo} to=\"/sw-react/\" >\r\n            {/* <img alt='Logo' src={LOGO_FULL} /> */}\r\n          </NavLink>\r\n        </div>\r\n\r\n        <div className={styles.navigation__section}>\r\n          <ul className={styles.navigation__linkGroup}>\r\n            <li ><NavLink activeClassName={styles.navigation__link_selected} className={styles.navigation__link} to=\"/sw-react/films\"><span>Films</span></NavLink></li>\r\n            <li ><NavLink activeClassName={styles.navigation__link_selected} className={styles.navigation__link} to=\"/sw-react/characters\"><span>characters</span></NavLink></li>\r\n            <li ><NavLink activeClassName={styles.navigation__link_selected} className={styles.navigation__link} to=\"/sw-react/planets\"><span>Planets</span></NavLink></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={styles.navigation__section}>\r\n          <Button onClick={handleClick} title={currentUserEmail !== '' ? 'logout' : 'login'} />\r\n        </div>\r\n      </div>\r\n    </nav >\r\n  );\r\n}","import { CharacterModel } from \"../../models/characterModel\";\r\nimport { CharacterDTO } from \"../dtos/characterDTO\";\r\n\r\n/** Mapper for character */\r\nexport function mapCharacterDtoToCharacterModel(character: CharacterDTO, docId: number): CharacterModel {\r\n  return {\r\n    birthYear: character.birth_year,\r\n    created: character.created,\r\n    edited: character.edited,\r\n    eyeColor: character.eye_color,\r\n    gender: character.gender,\r\n    hairColor: character.hair_color,\r\n    height: character.height,\r\n    homeworld: character.homeworld,\r\n    image: character.image,\r\n    mass: character.mass,\r\n    name: character.name,\r\n    skinColor: character.skin_color,\r\n    docId,\r\n  }\r\n}\r\n","import { PlanetModel } from \"../../models/planetModel\";\r\nimport { PlanetDTO } from \"../dtos/planetDTO\";\r\n\r\n/** Mapper planet */\r\nexport function mapPlanetDtoToPlanetModel(planetDto: PlanetDTO, docId: number): PlanetModel {\r\n  return {\r\n    climate: planetDto.climate,\r\n    created: planetDto.created,\r\n    diameter: planetDto.diameter,\r\n    edited: planetDto.edited,\r\n    gravity: planetDto.gravity,\r\n    image: planetDto.image,\r\n    name: planetDto.name,\r\n    orbitalPeriod: planetDto.orbital_period,\r\n    population: planetDto.population,\r\n    rotationPeriod: planetDto.rotation_period,\r\n    surfaceWater: planetDto.surface_water,\r\n    terrain: planetDto.terrain,\r\n    docId,\r\n  }\r\n}\r\n","import { SpecieModel } from \"../../models/specieModel\";\r\nimport { SpecieDTO } from \"../dtos/specieDTO\";\r\n\r\n/** Mapper for specie */\r\nexport function mapSpecieDtoToSpecieModel(specieDto: SpecieDTO, docId: number): SpecieModel {\r\n  return {\r\n    averageHeight: specieDto.average_height,\r\n    averageLifespan: specieDto.average_lifespan,\r\n    classification: specieDto.classification,\r\n    created: specieDto.created,\r\n    designation: specieDto.designation,\r\n    edited: specieDto.edited,\r\n    eyeColors: specieDto.eye_colors,\r\n    hairColors: specieDto.hair_colors,\r\n    homeworld: specieDto.homeworld,\r\n    language: specieDto.language,\r\n    name: specieDto.name,\r\n    people: specieDto.people,\r\n    skinColors: specieDto.skin_colors,\r\n    docId,\r\n  }\r\n}\r\n","import { StarshipModel } from \"../../models/starshipModel\";\r\nimport { StarshipDTO } from \"../dtos/starshipDTO\";\r\n\r\n/** Mapper for starship */\r\nexport function mapStarshipDtoToStarshipMode(starshipDto: StarshipDTO, docId: number): StarshipModel {\r\n  return {\r\n    starshipSpeed: starshipDto.MGLT,\r\n    hyperdriveRating: starshipDto.hyperdrive_rating,\r\n    pilots: starshipDto.pilots,\r\n    starshipClass: starshipDto.starship_class,\r\n    docId,\r\n  }\r\n}\r\n","import { VehicleModel } from \"../../models/vehicleModel\";\r\nimport { VehicleDTO } from \"../dtos/vehicleDTO\";\r\n\r\n/** Mapper for vehicle */\r\nexport function mapVehicleDtoToVehicleModel(vehicleDto: VehicleDTO, docId: number): VehicleModel {\r\n  return {\r\n    pilots: vehicleDto.pilots,\r\n    vehicleClass: vehicleDto.vehicle_class,\r\n    docId,\r\n  }\r\n}\r\n","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport { db } from '../../firebaseService'\r\nimport { store } from '../../../store/store';\r\nimport {\r\n  mapFilmDtoToFilmModel,\r\n  mapPlanetDtoToPlanetModel,\r\n  mapSpecieDtoToSpecieModel,\r\n  mapStarshipDtoToStarshipMode,\r\n  mapVehicleDtoToVehicleModel,\r\n  mapCharacterDtoToCharacterModel,\r\n} from '../../mappers';\r\nimport {\r\n  FilmModel,\r\n  SpecieModel,\r\n  PlanetModel,\r\n  VehicleModel,\r\n  StarshipModel,\r\n  CharacterModel,\r\n} from '../../../models';\r\n\r\nconst { dispatch } = store\r\n\r\n/**\r\n *  Downloads all films and saves to the store using a subscription\r\n * \r\n * @returns An unsubscribe function that needs to be called to unsubscribe from receiving new data\r\n */\r\nexport const loadAllFilms = (): (() => void) =>\r\n  db.firestore().collection(\"films\")\r\n    .onSnapshot((querySnapshot) => {\r\n\r\n      const films: FilmModel[] = []\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const mapped = mapFilmDtoToFilmModel(doc.data().fields, doc.data().pk)\r\n        films.push(mapped);\r\n      });\r\n\r\n      dispatch({\r\n        type: 'films/loadAllFilms',\r\n        payload: films\r\n      })\r\n    })\r\n\r\n/**\r\n * Chunk array function to bypass firebase limitation\r\n * \r\n * @param fullListArray Array with id, by which you need to get the entire list of data from firebase \r\n * @returns A two-dimensional array containing arrays with a limited number of id's inside each\r\n */\r\nconst array–°hunking = (fullListArray: number[]): number[][] => {\r\n  /* NOTE: Firebase limitation */\r\n  const chunkSize = 10;\r\n  const chunksArray: number[][] = [];\r\n\r\n  for (let i = 0; i < Math.ceil(fullListArray.length / chunkSize); i++) {\r\n    chunksArray[i] = fullListArray.slice((i * chunkSize), (i * chunkSize) + chunkSize);\r\n  }\r\n\r\n  return [...chunksArray]\r\n}\r\n\r\n/**\r\n * Loads and stores additional related data for the movie\r\n * \r\n * @param idList List of all id by which to find data on firebase\r\n * @param link The path by which you need to access data in the database\r\n * @param mapperFunc The mapper function, with which will need to transform the data, before saving to the storage\r\n * @param actionCreate A function that creates the required action to save data to the storage\r\n */\r\nexport const loadExtraDataToCurrentFilm = <T, F>(\r\n  idList: number[],\r\n  link: string,\r\n  mapperFunc: (fields: F, pk: number) => T,\r\n  actionCreate: (array: T[]) => { type: string, payload: T[] })\r\n  : void => {\r\n\r\n  const result: T[] = []\r\n  const chanksArray = array–°hunking(idList)\r\n\r\n  /* NOTE: I get related data simply through the get method, not by subscription. \r\n  Since their relevance is not critical */\r\n  for (let i = 0; i < chanksArray.length; i++) {\r\n    db.firestore().collection(link).where('pk', \"in\", chanksArray[i])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const mapped: T = mapperFunc(doc.data().fields, doc.data().pk)\r\n          result.push(mapped)\r\n        });\r\n        dispatch(actionCreate(result))\r\n      })\r\n    /* TODO: Handle possible errors while receiving data */\r\n  }\r\n}\r\n\r\n/**\r\n * Function for creating actions\r\n * \r\n * @param characters Array of processed data, for saving to storage\r\n * @returns Action\r\n */\r\nconst actionCharacters = (characters: CharacterModel[]) => ({\r\n  type: 'currentFilm/loadCharactersToCurrentFilm',\r\n  payload: characters\r\n})\r\n\r\n/**\r\n * Function for creating actions\r\n * \r\n * @param planets Array of processed data, for saving to storage\r\n * @returns Action\r\n */\r\nconst actionPlanets = (planets: PlanetModel[]) => ({\r\n  type: 'currentFilm/loadPlanetsToCurrentFilm',\r\n  payload: planets\r\n})\r\n\r\n/**\r\n * Function for creating actions\r\n * \r\n * @param species Array of processed data, for saving to storage\r\n * @returns Action\r\n */\r\nconst actionSpecies = (species: SpecieModel[]) => ({\r\n  type: 'currentFilm/loadSpeciesToCurrentFilm',\r\n  payload: species\r\n})\r\n\r\n/**\r\n * Function for creating actions\r\n * \r\n * @param starships Array of processed data, for saving to storage\r\n * @returns Action\r\n */\r\nconst actionStarships = (starships: StarshipModel[]) => ({\r\n  type: 'currentFilm/loadStarshipsToCurrentFilm',\r\n  payload: starships\r\n})\r\n\r\n/**\r\n * Function for creating actions\r\n * \r\n * @param vehicles Array of processed data, for saving to storage\r\n * @returns Action\r\n */\r\nconst actionVehicles = (vehicles: VehicleModel[]) => ({\r\n  type: 'currentFilm/loadVehiclesToCurrentFilm',\r\n  payload: vehicles\r\n})\r\n\r\n/* NOTE: Updates the movie piece by piece. to be able to easily reconfigure the application:\r\n load individual pieces of data when opening individual tabs */\r\n/** Refreshes all related data for the selected movie */\r\nexport const updateCurrentFilm = (film: FilmModel): void => {\r\n  loadExtraDataToCurrentFilm(film.planets, 'planets', mapPlanetDtoToPlanetModel, actionPlanets)\r\n  loadExtraDataToCurrentFilm(film.characters, 'people', mapCharacterDtoToCharacterModel, actionCharacters)\r\n  loadExtraDataToCurrentFilm(film.species, 'species', mapSpecieDtoToSpecieModel, actionSpecies)\r\n  loadExtraDataToCurrentFilm(film.starships, 'starships', mapStarshipDtoToStarshipMode, actionStarships)\r\n  loadExtraDataToCurrentFilm(film.vehicles, 'vehicles', mapVehicleDtoToVehicleModel, actionVehicles)\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { IAsideLink } from '../../models/sharedInterfaces/asideLink';\r\nimport styles from './AsideList.module.scss'\r\n\r\n/** Props interface */\r\ninterface Props {\r\n  linksList: IAsideLink[],\r\n  currentRoute: string,\r\n}\r\n\r\n/** List for navigation, within a specific section/page. \r\n * Contains a complete list of all page data */\r\nexport const AsideList: React.FC<Props> = ({ linksList, currentRoute }) => {\r\n\r\n  /** List of navigation links */\r\n  const navList = (\r\n    <ul className={styles.nav}>\r\n      {linksList.map((link) => (\r\n        <li key={link.id}>\r\n          <NavLink\r\n            activeClassName={styles.selected}\r\n            className={styles.linkItem}\r\n            to={`/sw-react/${currentRoute}/${link.id}`} >\r\n            {link.title}\r\n          </NavLink>\r\n        </li>\r\n      ))\r\n      }\r\n    </ul >\r\n  )\r\n\r\n  const loadingMessage = \"Loading...\"\r\n\r\n  return (\r\n    <aside className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        {\r\n          linksList.length\r\n            ? navList\r\n            : loadingMessage\r\n        }\r\n      </div>\r\n    </aside>\r\n  );\r\n}","/* NOTE: Disabled eslint in this file as it was asking for values to be typed (JS, not TS) */\r\n// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { Component } from \"react\";\r\nimport styles from './commonStyles.module.css'\r\n\r\n/** Component container for individual tabs. Used to display related data */\r\nexport class Tabs extends Component {\r\n  state = {\r\n    selected: this.props.selected || 0\r\n  };\r\n\r\n  handleChange(index) {\r\n    this.setState({ selected: index });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className={styles.tabsContainer}>\r\n          {this.props.children.map((elem, index) => {\r\n            const style = index === this.state.selected ? styles.selected : \"\";\r\n            return (\r\n              <li key={elem.props.title} className={`${styles.tabItem} ${style}`}>\r\n                <button className={styles.tabButton} onClick={() => this.handleChange(index)} >{elem.props.title}</button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <div className={styles.panel}>{this.props.children[this.state.selected]}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SW-ImageNotFound_transparent.6e808547.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { ResultList } from '../../FilmMainContent/dataListService';\r\nimport styles from './RelatedDatapanel.module.scss'\r\nimport imageBGPlaceHolder from '../../../../assets/imagePlaceHolder/SW-ImageNotFound_transparent.png'\r\n\r\n/** Props interface */\r\ninterface componentProps {\r\n  urlPath?: string,\r\n  contentList: ResultList[],\r\n}\r\n\r\n/** Component used in tabs to render individual cards of related character / planet / entity data */\r\nexport const RelatedDataPanel: React.FC<componentProps> = ({ urlPath, contentList }) => (\r\n  <div className={styles.wrapper}>\r\n    {contentList.map((contentItem) =>\r\n      <Link key={contentItem.id} className={styles.item} to={`/sw-react/${urlPath}/${contentItem.id}`} >\r\n\r\n        {/* An entity avatar as a background image */}\r\n        <div\r\n          className={styles.itemPicture}\r\n          style={{\r\n            backgroundImage: `url('${contentItem.image ? contentItem.image : imageBGPlaceHolder}') `,\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'top center',\r\n            overflow: 'hidden',\r\n          }}\r\n        />\r\n\r\n        <div className={styles.itemContainer}>\r\n          <div className={styles.itemContent}>\r\n            {/* NOTE: I return a tuple, you should always work with indices [0] and [1] */}\r\n            <div className={styles.itemTitle}>\r\n              <span className={styles.titleValue}>{contentItem.title[1]}</span>\r\n            </div>\r\n\r\n            {contentItem.subTitle && (\r\n              <div className={styles.itemSubTitle}>\r\n                <p className={styles.subTitle}>{contentItem.subTitle[0]}</p>\r\n                <span className={styles.subTitleValue}>{contentItem.subTitle[1]}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Link>)}\r\n  </div>\r\n)","import React from \"react\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const Panel = (props) => <div>{props.children}</div>","/** Getting a list with the necessary data in a certain format, for each of the categories */\r\nimport { ExtendedFilmModel } from '../../../models';\r\n\r\n/** Result list interface */\r\nexport interface ResultList {\r\n  id: number,\r\n  title: string[],\r\n  subTitle?: string[],\r\n  image?: string\r\n}\r\n\r\n/**\r\n * Returns a list of planets as an array of objects to display related information in tabs\r\n * \r\n * @param currentFilm - Film selected by the user to be viewed on screen\r\n * @returns An array of objects to display containing basic category data\r\n */\r\nexport const getPlanetsList = (currentFilm: ExtendedFilmModel):ResultList[] => {\r\n  const planetsList: ResultList[] = currentFilm.planets.map(planet => ({\r\n      id: planet.docId,\r\n      title: ['Name', planet.name],\r\n      subTitle: ['Diameter', planet.diameter],\r\n      image: planet.image\r\n    }))\r\n  return planetsList\r\n}\r\n\r\n/**\r\n * Returns a list of characters as an array of objects to display related information in tabs\r\n * \r\n * @param currentFilm - Film selected by the user to be viewed on screen\r\n * @returns An array of objects to display containing basic category data\r\n */\r\nexport const getCharactersList = (currentFilm: ExtendedFilmModel):ResultList[] => {\r\n  const charactersList: ResultList[] = currentFilm.characters.map(character => ({\r\n      id: character.docId,\r\n      title: ['Name', character.name],\r\n      subTitle: ['Gender', character.gender],\r\n      image: character.image\r\n    }))\r\n  return charactersList\r\n}\r\n\r\n/**\r\n * Returns a list of species as an array of objects to display related information in tabs\r\n * \r\n * @param currentFilm - Film selected by the user to be viewed on screen\r\n * @returns An array of objects to display containing basic category data\r\n */\r\nexport const getSpeciesList = (currentFilm: ExtendedFilmModel):ResultList[] => {\r\n  const speciesList: ResultList[] = currentFilm.species.map(specie => ({\r\n      id: specie.docId,\r\n      title: ['Name', specie.name],\r\n      subTitle: ['Language',specie.language]\r\n    }))\r\n  return speciesList\r\n}\r\n\r\n/**\r\n * Returns a list of starships as an array of objects to display related information in tabs\r\n * \r\n * @param currentFilm - Film selected by the user to be viewed on screen\r\n * @returns An array of objects to display containing basic category data\r\n */\r\nexport const getStarshipsList = (currentFilm: ExtendedFilmModel):ResultList[] => {\r\n  const starshipsList: ResultList[] = currentFilm.starships.map(starship => ({\r\n      id: starship.docId,\r\n      title: ['Vehicle class', starship.starshipClass],\r\n      subTitle: ['MGLT', starship.starshipSpeed]\r\n    }))\r\n  return starshipsList\r\n}\r\n\r\n/**\r\n * Returns a list of vehicles as an array of objects to display related information in tabs\r\n * \r\n * @param currentFilm - Film selected by the user to be viewed on screen\r\n * @returns An array of objects to display containing basic category data\r\n */\r\nexport const getVehiclesList = (currentFilm: ExtendedFilmModel):ResultList[] => {\r\n  const vehiclesList: ResultList[] = currentFilm.vehicles.map(vehicle => ({\r\n      id: vehicle.docId,\r\n      title: ['Vehicle class', vehicle.vehicleClass]\r\n    }))\r\n  return vehiclesList\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { RootState, store } from \"../../../store/store\";\r\nimport { updateCurrentFilm } from '../../../api/services/FilmsService/filmsService';\r\nimport { FilmModel, ExtendedFilmModel } from \"../../../models\";\r\n\r\nimport { Tabs } from '../../TabsSection/Tabs';\r\nimport { RelatedDataPanel } from '../RelatedTabs/RelatedDataPanel';\r\nimport { Panel } from '../../TabsSection/Panel';\r\nimport * as dataListService from './dataListService'\r\n\r\nimport styles from './FilmMainContent.module.scss'\r\nimport \"../../TabsSection/commonStyles.module.css\"\r\n\r\n/* NOTE: the section on the films page, which displays basic information \r\n(details, cover, poster, film director, etc.) about the selected film, is not completed yet */\r\n\r\n/* NOTE: Additional linked data necessary for watching a movie is loaded only at the moment when I open its page,\r\n and not when I go to the section with \"all movies\".\r\nI do not update the movie as a whole (I don‚Äôt replace its associated data at once), \r\nbut I do it already on the movie viewing page only because this is due to the condition of the problem. \r\n\"Should block as little data as possible. And load it only when explicitly required by the user.\"\r\n \r\nIt makes no sense to load and update data for all films at once, when the user can watch them only for one or two.\r\n - The film itself is loaded anew every time, which allows you to receive always up-to-date information about it.\r\n - I cannot use the local Redax storage, from which I would pull out related data, \r\n because it still may not have related data (they may not be loaded at the moment \r\n  if the user has not yet visited the pages with the planets or characters on separate pages.\r\n\r\n - I load related data for the movie on the page of its viewing, and not when the user pokes on the tabs.\r\n  Of course, the user may not want to look at all the associated data (he would only need to look at the main section),\r\n   in which case it would not be worth loading them, but it is better to load the data in advance than to make\r\n    him wait every time he clicks to a new tab and wait for everything to be loaded there */\r\n\r\n/* NOTE: the movie is updated gradually, in portions: when you open the movie, \r\nonly part of the information about it is shown (the tabs are loaded one by one).\r\nThis is a little longer than if I downloaded everything at once, in one piece, \r\nbut nevertheless, this is a good scenario, since the user will see at least part \r\nof the information about the movie as quickly as possible, and he does not have to wait \r\nfor its full download to start reading the information */\r\n\r\n/* NOTE: Re-renders often occur in the component when data is received. \r\nThese multiple component re-renders are due to a large number of small API requests.\r\nEach of the requests updates the object with the currently selected movie and thus\r\n (returning a new changed movie object in the reducer) triggers the component's rerender */\r\n\r\n/** ID parameter for the selected film */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n\r\n/** A page containing detailed information on the selected film */\r\nexport const FilmMainContent: React.FC = () => {\r\n\r\n  const { id } = useParams<ParamTypes>();\r\n\r\n  /* Getting the film I need from the entire list of downloaded films in the store */\r\n  const film: FilmModel | undefined = useSelector((state: RootState) =>state.films.find((findFilm: FilmModel) => findFilm.docId === Number(id)))\r\n\r\n  /* Update related data for the currently selected movie every time a new movie is selected in the sidebar */\r\n  useEffect(() => {\r\n    store.dispatch({\r\n      type: 'currentFilm/setCurrentFilm',\r\n      payload: film\r\n    })\r\n\r\n    if (film)\r\n      updateCurrentFilm(film)\r\n  }, [film])\r\n\r\n  const currentFilm: ExtendedFilmModel | undefined = useSelector((state: RootState) => state.currentFilm)\r\n\r\n  /* FIXME: An unnecessarily complex condition for checking the availability of a film */\r\n  const backgroundImageStyles = {\r\n    backgroundImage: `url('${film ? film.imageBackground : ''}')`,\r\n    // eslint-disable-next-line no-nested-ternary\r\n    backgroundSize: `${film ? film.imageBackground ? 'cover' : \"contain\" : ''}`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    overflow: 'hidden',\r\n  }\r\n\r\n  const loadingMessage = \"Loading...\"\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {id && film &&\r\n        <div className={styles.container}>\r\n\r\n          <div className={styles.mainData} style={backgroundImageStyles}>\r\n            <div className={styles.content}>\r\n              <div className={styles.poster}>\r\n                <img alt={film.title} src={film ? film.imagePoster : ''}/>\r\n              </div>\r\n              <div className={styles.filmInformation}>\r\n                <h1 className={styles.filmTitle}>{film && film.title}</h1>\r\n                {/* TODO: Change the output format of movie information */}\r\n                <ul className={styles.informationList}>\r\n                  <li className={styles.informationListItem}>\r\n                    <span className={styles.informationListTitle}>Year:</span>\r\n                    <span className={styles.informationListContent}>{film?.releaseDate}</span>\r\n                  </li>\r\n                  <li className={styles.informationListItem}>\r\n                    <span className={styles.informationListTitle}>Director:</span>\r\n                    <span className={styles.informationListContent}>{film?.director}</span>\r\n                  </li>\r\n                  <li className={styles.informationListItem}>\r\n                    <span className={styles.informationListTitle}>Episode:</span>\r\n                    <span className={styles.informationListContent}>{film?.episodeId}</span>\r\n                  </li>\r\n                </ul>\r\n                {/* FIXME: Modify the Option Button for movie editing. Depends on authorization */}\r\n                {/* <button >Edit</button> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* TODO: Move tabs into a separate component */}\r\n          <div className={styles.relativeContent}>\r\n            <Tabs>\r\n              <Panel title=\"Characters\" >\r\n                {currentFilm.characters\r\n                  ? <RelatedDataPanel contentList={dataListService.getCharactersList(currentFilm)} urlPath='characters' />\r\n                  : loadingMessage\r\n                }\r\n              </Panel>\r\n\r\n              <Panel title=\"Planets\">\r\n                {currentFilm.planets\r\n                  ? <RelatedDataPanel contentList={dataListService.getPlanetsList(currentFilm)} urlPath='planets' />\r\n                  : loadingMessage\r\n                }\r\n              </Panel>\r\n\r\n              {/* NOTE: Entities from the next 3 tabs will be redirected to a 404 page because they don't have detailed view pages */}\r\n              <Panel title=\"Species\">\r\n                {currentFilm.species\r\n                  ? <RelatedDataPanel contentList={dataListService.getSpeciesList(currentFilm)} urlPath='species' />\r\n                  : loadingMessage\r\n                }\r\n              </Panel>\r\n\r\n              <Panel title=\"Starships\">\r\n                {currentFilm.starships\r\n                  ? <RelatedDataPanel contentList={dataListService.getStarshipsList(currentFilm)} urlPath='starships' />\r\n                  : loadingMessage\r\n                }\r\n              </Panel>\r\n\r\n              <Panel title=\"Vehicles\">\r\n                {currentFilm.vehicles\r\n                  ? <RelatedDataPanel contentList={dataListService.getVehiclesList(currentFilm)} urlPath='vehicles' />\r\n                  : loadingMessage\r\n                }\r\n              </Panel>\r\n\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","/* Just wrapper */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMedia from 'use-media';\r\nimport { loadAllFilms } from '../../../api/services/FilmsService/filmsService';\r\nimport { AsideList } from '../../../components/AsideList';\r\nimport { FilmMainContent } from '../../../components/MainContent/FilmMainContent';\r\nimport { FilmModel } from '../../../models/filmModel';\r\nimport { IAsideLink } from '../../../models/sharedInterfaces/asideLink';\r\nimport { RootState } from '../../../store/store';\r\nimport styles from '../commonStyles.module.scss';\r\n\r\n/* NOTE: every time I enter the component, I reload all the data from APi, and do not use the data already saved in the store, because it is necessary by the condition of the task */\r\n\r\n/** ID parameter for the selected film */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n\r\n/** Provider container page, for the films page wrapping the content page\r\n *  and passing the necessary data to the main components */\r\nexport const FilmsPage: React.FC = () => {\r\n\r\n  const { id } = useParams<ParamTypes>();\r\n\r\n  /* A media expression to determine the width of the current screen. For conditional rendering */\r\n  const isNarrow = useMedia({ maxWidth: '768px' })\r\n\r\n  const currentRoute = 'films'\r\n\r\n  useEffect(() => loadAllFilms(), [])\r\n\r\n  /* Based on the array with movies, I form a list for its subsequent rendering in the side bar */\r\n  const selector = (state: RootState) => state\r\n    .films\r\n    .map((film: FilmModel) => (\r\n      {\r\n        title: film.title,\r\n        id: film.docId\r\n      }\r\n    ))\r\n\r\n  const linksList: IAsideLink[] = useSelector(selector)\r\n\r\n  /* NOTE: To adapt the complex layout for mobile devices, I made a stepped rendering of the component. The nav list and the page about ilma are rendered alternately */\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n\r\n        {/* Render the Aside-list always, except for the case when the screen is already 768px and the film is not selected for viewing */}\r\n        {!(id && isNarrow) &&\r\n          <div className={styles.aside}>\r\n            <AsideList currentRoute={currentRoute} linksList={linksList} />\r\n          </div>\r\n        }\r\n\r\n        {/* Render the film-information component always except for narrow screens when film is not selected */}\r\n        {(isNarrow && !id)\r\n          ? null\r\n          : <div className={styles.mainContent}>\r\n            <FilmMainContent />\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { FilmDTO } from \"../dtos/filmDTO\";\r\nimport { FilmModel } from \"../../models/filmModel\";\r\n\r\n/** Mapper for film */\r\nexport function mapFilmDtoToFilmModel(filmDto: FilmDTO, docId: number): FilmModel {\r\n  return {\r\n    characters: filmDto.characters,\r\n    created: filmDto.created,\r\n    director: filmDto.director,\r\n    edited: filmDto.edited,\r\n    episodeId: filmDto.episode_id,\r\n    openingCrawl: filmDto.opening_crawl,\r\n    planets: filmDto.planets,\r\n    producer: filmDto.producer,\r\n    releaseDate: filmDto.release_date,\r\n    species: filmDto.species,\r\n    starships: filmDto.starships,\r\n    title: filmDto.title,\r\n    vehicles: filmDto.vehicles,\r\n    imageBackground: filmDto.image_background,\r\n    imagePoster: filmDto.image_poster,\r\n    docId,\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Yoda-ImageNotFound.d35156a9.png\";","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { CharacterModel } from \"../../../models\";\r\nimport imageNotFound from \"../../../assets/imagePlaceHolder/Yoda-ImageNotFound.png\"\r\nimport { RootState } from '../../../store/store';\r\nimport styles from './CharacterMainContent.module.scss'\r\n\r\n\r\n/** ID parameter for the selected people */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n\r\n/** A page containing detailed information on the selected character */\r\nexport const CharacterMainContent: React.FC = () => {\r\n  /* NOTE: I get parameters from the url, if there is an id in the parameters, I pull the character data from the store and display it,\r\n   if not, show the stub */\r\n  const urlParams: ParamTypes = useParams();\r\n\r\n  /* Getting the planet I need from the entire list loaded into the store */\r\n  const character: CharacterModel | undefined = useSelector((state: RootState) =>\r\n    state.characters.find((findCharacter: CharacterModel) => findCharacter.docId === Number(urlParams.id)))\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {urlParams.id && character && (\r\n        <div className={styles.container}>\r\n          <div className={styles.content}>\r\n\r\n\r\n            <div className={styles.characterPicture}>\r\n              <div className={styles.characterPicture__wrapper}>\r\n                {/* <div className={styles.shadowPanel} /> */}\r\n                {\r\n                  character &&\r\n                  <div\r\n                    className={styles.characterPicture__image}\r\n                    style={{\r\n                      backgroundImage: `url('${character.image ? character.image : imageNotFound}') `,\r\n                      backgroundSize: 'contain',\r\n                      backgroundRepeat: 'no-repeat',\r\n                      backgroundPosition: 'top center',\r\n                      overflow: 'hidden',\r\n                    }}\r\n                  />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.characterInfo}>\r\n\r\n              <div className={styles.characterInfo__header}>\r\n\r\n                <div className={styles.characterInfo__row}>\r\n                  <p className={styles.characterInfo__name}>{character.name}</p>\r\n                </div>\r\n\r\n                <div className={styles.characterInfo__row}>\r\n                  <p className={styles.characterInfo__gender}>{character.gender}</p>\r\n                  <p className={styles.characterInfo__birth}>Birth: {character.birthYear}</p>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className={styles.characterInfo__body}>\r\n                <div className={styles.characterInfo__row}>\r\n                  <div className={styles.characterInfo__column}>\r\n                    <p className={styles.characterInfo__value}>{character.height}</p>\r\n                    <p className={styles.characterInfo__subTitle}>Height</p>\r\n                  </div>\r\n                  <div className={styles.characterInfo__column}>\r\n                    <p className={styles.characterInfo__value}>{character.mass}</p>\r\n                    <p className={styles.characterInfo__subTitle}>Mass</p>\r\n                  </div>\r\n                  <div className={styles.characterInfo__column}>\r\n                    <p className={styles.characterInfo__value}>{character.eyeColor}</p>\r\n                    <p className={styles.characterInfo__subTitle}>Eye color</p>\r\n                  </div>\r\n                  <div className={styles.characterInfo__column}>\r\n                    <p className={styles.characterInfo__value}>{character.hairColor}</p>\r\n                    <p className={styles.characterInfo__subTitle}>Hair color</p>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { db } from '../../firebaseService'\r\nimport { store } from '../../../store/store';\r\nimport { CharacterModel } from '../../../models';\r\nimport { mapCharacterDtoToCharacterModel } from '../../mappers';\r\n\r\nconst { dispatch } = store\r\n\r\n\r\n/**\r\n *  Downloads all characters and saves to the store using a subscription\r\n * \r\n * @returns An unsubscribe function that needs to be called to unsubscribe from receiving new data\r\n */\r\nexport const loadAllCharacters = (): (() => void) => (\r\n  db.firestore().collection(\"people\")\r\n    .onSnapshot((querySnapshot) => {\r\n\r\n      const characters: CharacterModel[] = []\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const mapped: CharacterModel = mapCharacterDtoToCharacterModel(doc.data().fields, doc.data().pk)\r\n        characters.push(mapped);\r\n      });\r\n\r\n      dispatch({\r\n        type: 'characters/loadAllCharacters',\r\n        payload: characters\r\n      })\r\n    })\r\n  /* TODO: Handle possible errors while receiving data */\r\n)","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMedia from 'use-media';\r\nimport { AsideList } from '../../../components/AsideList';\r\nimport { CharacterMainContent } from \"../../../components/MainContent/CharacterMainContent/CharacterMainContent\";\r\nimport { loadAllCharacters } from '../../../api/services/charactersService/charactersService';\r\nimport { IAsideLink } from '../../../models/sharedInterfaces/asideLink';\r\nimport { CharacterModel } from '../../../models/characterModel';\r\nimport { RootState } from '../../../store/store';\r\nimport styles from '../commonStyles.module.scss'\r\n\r\n/** ID parameter for the selected film */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n\r\n/** Provider container page, for the characters page wrapping the content page\r\n *  and passing the necessary data to the main components */\r\nexport const CharactersPage: React.FC = () => {\r\n\r\n  const { id } = useParams<ParamTypes>();\r\n\r\n  /* A media expression to determine the width of the current screen. For conditional rendering */\r\n  const isNarrow = useMedia({ maxWidth: '768px' })\r\n\r\n\r\n  const currentRoute = 'characters'\r\n\r\n  useEffect(() => loadAllCharacters(), [])\r\n\r\n  const selector = (state: RootState) => state\r\n    .characters\r\n    .map((character: CharacterModel) => (\r\n      {\r\n        title: character.name,\r\n        id: character.docId\r\n      }\r\n    ))\r\n\r\n  const linksList: IAsideLink[] = useSelector(selector)\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n\r\n        {/* Render the Aside-list always, except for the case when the screen is already 768px and the film is not selected for viewing */}\r\n        {!(id && isNarrow) &&\r\n          <div className={styles.aside}>\r\n            <AsideList currentRoute={currentRoute} linksList={linksList} />\r\n          </div>\r\n        }\r\n\r\n        {/* Render the film-information component always except for narrow screens when film is not selected */}\r\n        {(isNarrow && !id)\r\n          ? null\r\n          : <div className={styles.mainContent}>\r\n            <CharacterMainContent />\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport { db } from '../../firebaseService'\r\nimport { store } from '../../../store/store';\r\nimport { PlanetModel } from '../../../models';\r\nimport { mapPlanetDtoToPlanetModel } from '../../mappers';\r\n\r\nconst { dispatch } = store\r\n\r\n/**\r\n *  Downloads all planets and saves to the store using a subscription\r\n * \r\n * @returns An unsubscribe function that needs to be called to unsubscribe from receiving new data\r\n */\r\nexport const loadAllPlanet = (): (() => void) => (\r\n  db.firestore().collection(\"planets\")\r\n    .onSnapshot((querySnapshot) => {\r\n\r\n      const planets: PlanetModel[] = []\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const mapped: PlanetModel = mapPlanetDtoToPlanetModel(doc.data().fields, doc.data().pk)\r\n        planets.push(mapped);\r\n      });\r\n\r\n      dispatch({\r\n        type: 'planets/loadAllPlanets',\r\n        payload: planets\r\n      })\r\n    })\r\n  /* TODO: Handle possible errors while receiving data */\r\n)","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { PlanetModel } from '../../../models';\r\nimport { RootState } from '../../../store/store';\r\nimport imageNotFound from \"../../../assets/imagePlaceHolder/Yoda-ImageNotFound.png\"\r\nimport styles from './PlanetMainContent.module.scss'\r\n\r\n/** ID parameter for the selected planet */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n/** A page containing detailed information on the selected planet */\r\nexport const PlanetMainContent: React.FC = () => {\r\n\r\n  const urlParams: ParamTypes = useParams();\r\n\r\n  /* I get the planet I need from the entire list of loaded planets in the store */\r\n  const planet: PlanetModel | undefined = useSelector((state: RootState) => state.planets.find((findPlanet: PlanetModel) => findPlanet.docId === Number(urlParams.id)))\r\n\r\n  /* FIXME: An unnecessarily complex condition for checking the availability of a planet */\r\n  const backgroundImageStyles = {\r\n    backgroundImage: `url('${planet ? planet.image ? planet.image : imageNotFound : ''}')`,\r\n    backgroundSize: `${planet ? planet.image ? 'cover' : \"contain\" : ''}`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    overflow: 'hidden',\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {urlParams.id &&\r\n        <div className={styles.container} style={backgroundImageStyles}>\r\n          <div className={styles.content}>\r\n            {planet &&\r\n              <div className={styles.planetInfo}>\r\n                <div className={`${styles.planetName} ${styles.planetInfoItem} `}>\r\n                  <p className={styles.value}>{planet.name}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Climate</p>\r\n                  <p className={styles.value}>{planet.climate}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Diameter</p>\r\n                  <p className={styles.value}>{planet.diameter}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Gravity</p>\r\n                  <p className={styles.value}>{planet.gravity}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Orbital period</p>\r\n                  <p className={styles.value}>{planet.orbitalPeriod}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Population</p>\r\n                  <p className={styles.value}>{planet.population}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Rotation period</p>\r\n                  <p className={styles.value}>{planet.rotationPeriod}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Surface water</p>\r\n                  <p className={styles.value}>{planet.surfaceWater}</p>\r\n                </div>\r\n\r\n                <div className={styles.planetInfo__item}>\r\n                  <p className={styles.description}>Terrain</p>\r\n                  <p className={styles.value}>{planet.terrain}</p>\r\n                </div>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMedia from 'use-media';\r\nimport { loadAllPlanet } from '../../../api/services/planetsService/planetsService';\r\nimport { AsideList } from '../../../components/AsideList';\r\nimport { PlanetMainContent } from '../../../components/MainContent/PlanetMainContent/PlanetMainContent';\r\nimport { PlanetModel } from '../../../models/planetModel';\r\nimport { IAsideLink } from '../../../models/sharedInterfaces/asideLink';\r\nimport { RootState } from '../../../store/store';\r\nimport styles from '../commonStyles.module.scss';\r\n\r\n/** ID parameter for the selected film */\r\ninterface ParamTypes {\r\n  id?: string\r\n}\r\n\r\n/** Provider container page, for the planets page wrapping the content page\r\n *  and passing the necessary data to the main components */\r\nexport const PlanetsPage: React.FC = () => {\r\n\r\n  const { id } = useParams<ParamTypes>();\r\n\r\n  /* A media expression to determine the width of the current screen. For conditional rendering */\r\n  const isNarrow = useMedia({ maxWidth: '768px' })\r\n\r\n  const currentRoute = 'planets'\r\n\r\n  useEffect(() => loadAllPlanet(), [])\r\n\r\n  const selector = (state: RootState) => state.planets.map((planet: PlanetModel) => (\r\n    {\r\n      title: planet.name,\r\n      id: planet.docId\r\n    }\r\n  ))\r\n\r\n  const linksList: IAsideLink[] = useSelector(selector)\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n\r\n        {/* Render the Aside-list always, except for the case when the screen is already 768px and the film is not selected for viewing */}\r\n        {!(id && isNarrow) &&\r\n          <div className={styles.aside}>\r\n            <AsideList currentRoute={currentRoute} linksList={linksList} />\r\n          </div>\r\n        }\r\n\r\n        {/* Render the film-information component always except for narrow screens when film is not selected */}\r\n        {(isNarrow && !id)\r\n          ? null\r\n          : <div className={styles.mainContent}>\r\n            <PlanetMainContent />\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/Stormtrooper1.9ed94a2c.png\";","export default __webpack_public_path__ + \"static/media/Stormtrooper2.2584c599.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { UserModel } from '../../models';\r\nimport { RootState } from '../../store/store';\r\nimport { userLogin, userRegister, FirebaseAuthResponse } from '../../api/services/userService/userService';\r\nimport { Button } from '../../components/UIComponents/Button/Button';\r\nimport styles from './LoginPage.module.css'\r\nimport stormtrooper1 from '../../assets/imagePlaceHolder/Stormtrooper1.png'\r\nimport stormtrooper2 from '../../assets/imagePlaceHolder/Stormtrooper2.png'\r\n\r\n/* Login / registration form page */\r\nexport const LoginPage: React.FC = () => {\r\n\r\n  /* State and timers for dynamically changing titles in the form header. Shows authorization and registration labels alternately */\r\n  const [positionX, setPositionX] = useState<number>(0)\r\n\r\n  useEffect(() => {\r\n    const timer1 = setInterval(() => setPositionX(-100), 4000)\r\n    const timer2 = setTimeout(() => setInterval(() => setPositionX(0), 4000), 2000);\r\n\r\n    /* This will clear Timeout */\r\n    return () => {\r\n      clearTimeout(timer1);\r\n      clearTimeout(timer2)\r\n    };\r\n  }, [])\r\n\r\n  /* Stores the login / registration status of the user (messages about success and errors) */\r\n  const [registrationStatus, changeRegistrationStatus] = useState<FirebaseAuthResponse>({ type: '', message: '' })\r\n\r\n  /* Actual user data retrieved from the auth form */\r\n  const [userCredentials, setUserCredentials] = useState<UserModel>({ email: '', password: '' })\r\n\r\n  /* Checking if the form has been submitted to show the user possible form filling errors */\r\n  const [formSubmitted, setFormSubmitted] = useState<boolean>(false)\r\n\r\n  /* User login */\r\n  const handleSignInForm = (event: React.FormEvent<HTMLButtonElement | HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    setFormSubmitted(true)\r\n\r\n    if (userCredentials.email && userCredentials.password) {\r\n      userLogin(userCredentials)\r\n        .catch(error => changeRegistrationStatus(error))\r\n    }\r\n  }\r\n\r\n  /* User registration */\r\n  const handleSignUpForm = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    setFormSubmitted(true)\r\n\r\n    if (userCredentials.email && userCredentials.password) {\r\n      userRegister(userCredentials)\r\n        .then((message) => changeRegistrationStatus(message))\r\n        .catch(error => changeRegistrationStatus(error))\r\n    }\r\n  }\r\n\r\n  /* Checking if the user is logged in to the application */\r\n  const currentUser = useSelector((state: RootState) => state.user)\r\n\r\n  if (currentUser.email) {\r\n    return <Redirect to='/sw-react/' />\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n\r\n        <div className={`${styles.image} ${styles.stormtrooperLeft}`}>\r\n          <img alt=\"stormtrooper\" src={stormtrooper1} />\r\n        </div>\r\n\r\n        <div className={styles.formContainer}>\r\n\r\n          <div className={styles.titleSection}>\r\n            <div className={styles.titleContainer}>\r\n              <p\r\n                className={styles.title}\r\n                style={{\r\n                  overflow: 'hidden',\r\n                  transform: `translateX(${positionX}%)`,\r\n                }}\r\n              >authorization</p>\r\n              <p\r\n                className={styles.title}\r\n                style={{\r\n                  overflow: 'hidden',\r\n                  transform: `translateX(${positionX}%)`,\r\n                }}\r\n              >registration</p>\r\n            </div>\r\n\r\n            <p className={styles.subTitle}>of your account</p>\r\n          </div>\r\n\r\n          <form className={styles.form} name=\"form\" onSubmit={handleSignInForm}>\r\n\r\n            <div className={styles.formElement}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                onChange={(e) => setUserCredentials(prevState => ({ ...prevState, email: e.target.value }))}\r\n                placeholder='example@gmail.com'\r\n                type=\"text\"\r\n                value={userCredentials.email} />\r\n              {formSubmitted && !userCredentials.email &&\r\n                <p className={styles.errorMessage}>Email is required</p>\r\n              }\r\n            </div>\r\n\r\n            <div className={styles.formElement}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                onChange={(e) => setUserCredentials(prevState => ({ ...prevState, password: e.target.value }))}\r\n                placeholder='password'\r\n                type=\"password\"\r\n                value={userCredentials.password} />\r\n              {formSubmitted && !userCredentials.password &&\r\n                <p className={styles.errorMessage}>Password is required</p>\r\n              }\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <div><Button onClick={handleSignInForm} title='Sign in' type='button' /></div>\r\n              <div><Button onClick={handleSignUpForm} title='Sign up' type='button' /></div>\r\n            </div>\r\n\r\n            {registrationStatus.type &&\r\n              <div className={registrationStatus.type === 'SUCCESS' ? styles.registrationStatusSuccess : styles.registrationStatusError}>\r\n                <p>{registrationStatus.message}</p>\r\n              </div>\r\n            }\r\n\r\n          </form>\r\n        </div>\r\n\r\n        <div className={`${styles.image} ${styles.stormtrooperRight}`}>\r\n          <img alt=\"stormtrooper\" src={stormtrooper2} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from './NotFoundPage.module.css'\r\n\r\n/** A component that returns a block with an image stating that the page was not found */\r\nexport const NotFoundPage: React.FC = () => (\r\n  <div className={styles.wrapper}>\r\n    <div className={styles.backgroundImage} />\r\n  </div>\r\n)","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { UserModel } from '../../models'\r\n\r\n\r\n/** Props interface */\r\ninterface Props {\r\n  children: any,\r\n  path: any,\r\n}\r\n\r\nexport const PrivateRoute: React.FC<Props> = ({ children, ...rest }) => {\r\n  /* Getting the planet I need from the entire list loaded into the store */\r\n  const authUser: UserModel | undefined = useSelector((state: RootState) => state.user)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        authUser.email\r\n          ? (children)\r\n          : (<Redirect to='/sw-react/login' />)\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { NavigationBar } from './components/NavigationBar';\r\nimport { FilmsPage } from './pages/contentPages/FilmsPage';\r\nimport { CharactersPage } from './pages/contentPages/CharactersPage';\r\nimport { PlanetsPage } from './pages/contentPages/PlanetsPage';\r\nimport { LoginPage } from './pages/LoginPage';\r\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\r\nimport styles from './App.module.css'\r\nimport { PrivateRoute } from './components/PrivateRoute/PrivateRoute';\r\n\r\nexport const App: React.FC = () => (\r\n  <div className={styles.app}>\r\n    <BrowserRouter>\r\n      <div className={styles.appNavbar}>\r\n        <NavigationBar />\r\n      </div>\r\n\r\n      <Switch>\r\n        <Redirect from=\"/sw-react\" to=\"/sw-react/films\" exact />\r\n        <PrivateRoute path=\"/sw-react/films/:id?\">\r\n          <FilmsPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/sw-react/characters/:id?\">\r\n          <CharactersPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/sw-react/planets/:id?\">\r\n          <PlanetsPage />\r\n        </PrivateRoute>\r\n\r\n        <Route component={LoginPage} path=\"/sw-react/login\" exact />\r\n\r\n        <Route component={NotFoundPage} path=\"*\" />\r\n\r\n        {/* FIXME: Navigation for child routes (edit screens) */}\r\n        {/*     <Route path=\"/planets/:id?\" render={({ match: { path } }) => (\r\n            <Switch>\r\n              <Route exact component={Planetspage} path={path} />\r\n              <Route exact component={() => <div>Edit</div>} path={`${path}/edit`} />\r\n            </Switch>\r\n          )} /> */}\r\n\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { App } from './App';\r\nimport './index.css';\r\nimport './normalize.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CharacterMainContent_wrapper__IG0y_\",\"container\":\"CharacterMainContent_container__gWXir\",\"content\":\"CharacterMainContent_content__3e8cU\",\"characterPicture\":\"CharacterMainContent_characterPicture__10xmL\",\"characterPicture__wrapper\":\"CharacterMainContent_characterPicture__wrapper__2OzBZ\",\"characterPicture__image\":\"CharacterMainContent_characterPicture__image__1-mtQ\",\"characterInfo\":\"CharacterMainContent_characterInfo__KzCp4\",\"characterInfo__header\":\"CharacterMainContent_characterInfo__header__1nNtk\",\"characterInfo__row\":\"CharacterMainContent_characterInfo__row__iAXhT\",\"characterInfo__name\":\"CharacterMainContent_characterInfo__name__1HWcu\",\"characterInfo__birth\":\"CharacterMainContent_characterInfo__birth__PvbeL\",\"characterInfo__gender\":\"CharacterMainContent_characterInfo__gender__G4rzc\",\"characterInfo__subTitle\":\"CharacterMainContent_characterInfo__subTitle__3LRrI\",\"characterInfo__value\":\"CharacterMainContent_characterInfo__value__pHbqG\"};"],"sourceRoot":""}